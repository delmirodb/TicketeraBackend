version: '3.9'

services:
  postgres-ticketera:
    image: postgres:latest
    container_name: postgres-ticketera
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: ticketera
    ports:
      - "5432:5432"
    networks:
      ticketera_red:
        ipv4_address: 172.21.0.2
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  tomcat-ticketera:
    container_name: tomcat-ticketera
    build: 
      context: .
      dockerfile: Dockerfile.back
    ports:
      - "5000:5000"
    networks:
      ticketera_red:
        ipv4_address: 172.21.0.3
    ## Espera a la base de datos para ejecutarse y evita que se despliegue incorrectamente.
    depends_on:
      postgres-ticketera:
        condition: service_healthy
  
  react-ticketera:
    container_name: react-ticketera
    build: 
      context: .
      dockerfile: Dockerfile.front
    ports:
      - "80:80"
    networks:
      ticketera_red:
        ipv4_address: 172.21.0.4

  rtmp-ticketera:
    container_name: rtmp-ticketera
    build:
      context: .
      dockerfile: Dockerfile.rtmp
    ports:
      - "1935:1935"
      - "8080:8080"
    networks:
      ticketera_red:
        ipv4_address: 172.21.0.5

networks:
  ticketera_red:
    ipam:
      driver: default
      config:
        - subnet: "172.21.0.0/16"
