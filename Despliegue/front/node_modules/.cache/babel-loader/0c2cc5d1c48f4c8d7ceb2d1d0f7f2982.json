{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Delmiro\\\\Desktop\\\\TicketeraFrontend\\\\src\\\\screens\\\\pruebaComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Container } from 'react-grid-system';\nimport { api } from '../Data/data';\nimport Button from '@mui/material/Button';\nimport TextField from \"@mui/material/TextField\";\nimport Box from '@mui/material/Box';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport ThermostatIcon from '@mui/icons-material/Thermostat';\nimport InvertColorsIcon from '@mui/icons-material/InvertColors';\nimport AirIcon from '@mui/icons-material/Air';\nimport { useLocation, Link } from 'react-router-dom';\nimport Grid from '@mui/material/Grid';\nimport { Row, Col } from 'react-grid-system';\nimport ReplayIcon from '@mui/icons-material/Replay';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PruebaComponent() {\n  _s();\n\n  //Var\n  const [clima, setClima] = useState({});\n  const [ciudades, setCiudades] = useState([]);\n  const [inputValue, setInputValue] = React.useState('');\n  const [hora, setHora] = useState(null);\n  const {\n    search\n  } = useLocation();\n  const queryParams = new URLSearchParams(search);\n  const ciudad = queryParams.get('ciudad');\n  const [busquedaCiudad, setBusquedaCiudad] = useState(false); //Effect\n\n  useEffect(() => {\n    async function isFocused() {\n      if (ciudad !== null) {\n        getClimaCiudad(ciudad);\n      } else {\n        getCiudades();\n      }\n    }\n\n    isFocused();\n  }, []);\n\n  const getCiudades = async () => {\n    await api.ciudades().then(response => {\n      let cd = [];\n\n      for (let i = 0; i < 100000; i++) {\n        if (i % 1000 == 0) {\n          cd.push(response.data[i]);\n        }\n      }\n\n      console.log(cd);\n      setCiudades(cd);\n    });\n  };\n\n  const getClima = async posicion => {\n    await api.tiempo(posicion.latitude, posicion.longitude).then(response => {\n      console.log(response.data);\n      setClima(response.data);\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  const getClimaCiudad = async ciudad => {\n    await api.climaCiudad(ciudad).then(response => {\n      console.log(response.data);\n      let coords = response.data.coord;\n      console.log(coords);\n      getNextDaysCity(coords);\n      setClima(response.data);\n      setBusquedaCiudad(true);\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  const getNextDays = async posicion => {\n    await api.nextDays(posicion.latitude, posicion.longitude).then(response => {\n      console.log(response.data);\n      const timeZone = response.data.timezone;\n      console.log(timeZone);\n      setHora(new Date().toLocaleString(\"es-ES\", {\n        hour: '2-digit',\n        minute: '2-digit',\n        timeZone: timeZone\n      }));\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  const getNextDaysCity = async posicion => {\n    await api.nextDays(posicion.lat, posicion.lon).then(response => {\n      console.log(response.data);\n      const timeZone = response.data.timezone;\n      console.log(timeZone);\n      setHora(new Date().toLocaleString(\"es-ES\", {\n        hour: '2-digit',\n        minute: '2-digit',\n        timeZone: timeZone\n      }));\n    }).catch(err => {\n      console.error(err);\n    });\n  }; //Function\n\n\n  function click() {\n    async function isFocused() {\n      await navigator.geolocation.getCurrentPosition(function (position) {\n        setBusquedaCiudad(true);\n        getNextDays(position.coords);\n        getClima(position.coords);\n      });\n    }\n\n    isFocused();\n  }\n\n  function buscarCiudad(ciudad) {\n    getClimaCiudad(ciudad.name + ',' + ciudad.country);\n    console.log(ciudad.name + ',' + ciudad.country);\n  }\n\n  function menu() {\n    window.location.href = \"/clima\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: hora && clima.name && busquedaCiudad == true ? /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          columnSpacing: 5,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    sx: {\n                      fontSize: 25\n                    },\n                    color: \"text.primary\",\n                    children: [clima.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 147,\n                      columnNumber: 27\n                    }, this), hora]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    style: {\n                      width: 150\n                    },\n                    alt: `clima_1`,\n                    src: 'img/' + clima.weather[0].icon + '.svg'\n                  }, `img_1`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    sx: {\n                      fontSize: 30\n                    },\n                    color: \"text.primary\",\n                    children: [Math.round(clima.main.temp), \"\\xB0C\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 27\n                    }, this), clima.weather[0].description.charAt(0).toUpperCase() + clima.weather[0].description.slice(1)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    sx: {\n                      fontSize: 25\n                    },\n                    color: \"text.secondary\",\n                    children: [/*#__PURE__*/_jsxDEV(ThermostatIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 158,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Max:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 27\n                    }, this), \" \", Math.round(clima.main.temp_max), \"\\xB0C \", /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Min:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 75\n                    }, this), \" \", Math.round(clima.main.temp_min), \"\\xB0C\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    sx: {\n                      fontSize: 25\n                    },\n                    color: \"text.secondary\",\n                    children: [/*#__PURE__*/_jsxDEV(InvertColorsIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 162,\n                      columnNumber: 27\n                    }, this), \"Humedad: \", clima.main.humidity, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    sx: {\n                      fontSize: 25\n                    },\n                    color: \"text.secondary\",\n                    children: [/*#__PURE__*/_jsxDEV(AirIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 27\n                    }, this), \"Viento: \", Math.round(clima.wind.speed), \" Km/h\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"contained\",\n                        onClick: menu,\n                        children: \"Volver\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 172,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 171,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: /*#__PURE__*/_jsxDEV(\"a\", {\n                        href: `/clima?ciudad=${clima.name},${clima.sys.country}`,\n                        children: /*#__PURE__*/_jsxDEV(ReplayIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 178,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 177,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 176,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this) : ciudad == null && busquedaCiudad == false ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n            id: \"country-select-demo\",\n            onChange: (event, newValue) => {\n              setBusquedaCiudad(true);\n              buscarCiudad(newValue);\n            },\n            inputValue: inputValue,\n            onInputChange: (event, newInputValue) => {\n              setInputValue(newInputValue);\n            },\n            sx: {\n              width: 300\n            },\n            options: ciudades,\n            autoHighlight: true,\n            getOptionLabel: option => option.name,\n            renderOption: (props, option) => /*#__PURE__*/_jsxDEV(Box, {\n              component: \"li\",\n              sx: {\n                '& > img': {\n                  mr: 2,\n                  flexShrink: 0\n                }\n              },\n              ...props,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                loading: \"lazy\",\n                width: \"20\",\n                src: `https://flagcdn.com/w20/${option.country.toLowerCase()}.png`,\n                srcSet: `https://flagcdn.com/w40/${option.country.toLowerCase()}.png 2x`,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 23\n              }, this), option.name, \" (\", option.country, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 21\n            }, this),\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              label: \"Busca una ciudad\",\n              inputProps: { ...params.inputProps,\n                autoComplete: 'new-password' // disable autocomplete and autofill\n\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: click,\n            children: \"Usar mi ubicaci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex'\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PruebaComponent, \"Ks7OUFVaGJ+x2mpS3EJh76EF8I4=\", false, function () {\n  return [useLocation];\n});\n\n_c = PruebaComponent;\nexport default PruebaComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PruebaComponent\");","map":{"version":3,"sources":["C:/Users/Delmiro/Desktop/TicketeraFrontend/src/screens/pruebaComponent.js"],"names":["React","useState","useEffect","Container","api","Button","TextField","Box","Autocomplete","Card","CardContent","Typography","ThermostatIcon","InvertColorsIcon","AirIcon","useLocation","Link","Grid","Row","Col","ReplayIcon","CircularProgress","PruebaComponent","clima","setClima","ciudades","setCiudades","inputValue","setInputValue","hora","setHora","search","queryParams","URLSearchParams","ciudad","get","busquedaCiudad","setBusquedaCiudad","isFocused","getClimaCiudad","getCiudades","then","response","cd","i","push","data","console","log","getClima","posicion","tiempo","latitude","longitude","catch","err","error","climaCiudad","coords","coord","getNextDaysCity","getNextDays","nextDays","timeZone","timezone","Date","toLocaleString","hour","minute","lat","lon","click","navigator","geolocation","getCurrentPosition","position","buscarCiudad","name","country","menu","window","location","href","fontSize","width","weather","icon","Math","round","main","temp","description","charAt","toUpperCase","slice","temp_max","temp_min","humidity","wind","speed","sys","event","newValue","newInputValue","option","props","mr","flexShrink","toLowerCase","params","inputProps","autoComplete","display"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Container } from 'react-grid-system';\r\nimport { api } from '../Data/data'\r\nimport Button from '@mui/material/Button';\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from '@mui/material/Box';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport ThermostatIcon from '@mui/icons-material/Thermostat';\r\nimport InvertColorsIcon from '@mui/icons-material/InvertColors';\r\nimport AirIcon from '@mui/icons-material/Air';\r\nimport { useLocation, Link } from 'react-router-dom';\r\nimport Grid from '@mui/material/Grid';\r\nimport { Row, Col } from 'react-grid-system'\r\nimport ReplayIcon from '@mui/icons-material/Replay';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nfunction PruebaComponent() {\r\n  //Var\r\n\r\n  const [clima, setClima] = useState({});\r\n  const [ciudades, setCiudades] = useState([]);\r\n  const [inputValue, setInputValue] = React.useState('');\r\n  const [hora, setHora] = useState(null);\r\n\r\n  const { search } = useLocation();\r\n  const queryParams = new URLSearchParams(search)\r\n  const ciudad = queryParams.get('ciudad');\r\n  const [busquedaCiudad, setBusquedaCiudad] = useState(false);\r\n\r\n  //Effect\r\n  useEffect(() => {\r\n    async function isFocused() {\r\n      if (ciudad !== null) {\r\n        getClimaCiudad(ciudad)\r\n      } else {\r\n        getCiudades();\r\n      }\r\n\r\n    }\r\n    isFocused()\r\n  }, [])\r\n\r\n  const getCiudades = async () => {\r\n    await api.ciudades()\r\n      .then(response => {\r\n        let cd = []\r\n        for (let i = 0; i < 100000; i++) {\r\n          if (i % 1000 == 0) {\r\n            cd.push(response.data[i])\r\n          }\r\n        }\r\n        console.log(cd)\r\n        setCiudades(cd)\r\n      })\r\n  }\r\n\r\n  const getClima = async (posicion) => {\r\n    await api.tiempo(posicion.latitude, posicion.longitude)\r\n      .then(response => {\r\n        console.log(response.data)\r\n        setClima(response.data)\r\n      })\r\n      .catch(err => {\r\n        console.error(err)\r\n      })\r\n  }\r\n\r\n  const getClimaCiudad = async (ciudad) => {\r\n    await api.climaCiudad(ciudad)\r\n      .then(response => {\r\n        console.log(response.data)\r\n        let coords = response.data.coord\r\n        console.log(coords)\r\n        getNextDaysCity(coords)\r\n        setClima(response.data)\r\n        setBusquedaCiudad(true);\r\n      })\r\n      .catch(err => {\r\n        console.error(err)\r\n      })\r\n  }\r\n\r\n  const getNextDays = async (posicion) => {\r\n    await api.nextDays(posicion.latitude, posicion.longitude)\r\n      .then(response => {\r\n        console.log(response.data)\r\n        const timeZone = response.data.timezone\r\n        console.log(timeZone)\r\n        setHora(new Date().toLocaleString(\"es-ES\", { hour: '2-digit', minute: '2-digit', timeZone: timeZone }))\r\n      })\r\n      .catch(err => {\r\n        console.error(err)\r\n      })\r\n  }\r\n\r\n  const getNextDaysCity = async (posicion) => {\r\n    await api.nextDays(posicion.lat, posicion.lon)\r\n      .then(response => {\r\n        console.log(response.data)\r\n        const timeZone = response.data.timezone\r\n        console.log(timeZone)\r\n        setHora(new Date().toLocaleString(\"es-ES\", { hour: '2-digit', minute: '2-digit', timeZone: timeZone }))\r\n      })\r\n      .catch(err => {\r\n        console.error(err)\r\n      })\r\n  }\r\n\r\n  //Function\r\n  function click() {\r\n    async function isFocused() {\r\n      await navigator.geolocation.getCurrentPosition(function (position) {\r\n        setBusquedaCiudad(true);\r\n        getNextDays(position.coords)\r\n        getClima(position.coords)\r\n      })\r\n    }\r\n    isFocused()\r\n  }\r\n\r\n  function buscarCiudad(ciudad) {\r\n    getClimaCiudad(ciudad.name + ',' + ciudad.country);\r\n    console.log(ciudad.name + ',' + ciudad.country)\r\n  }\r\n\r\n  function menu() {\r\n    window.location.href = \"/clima\";\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Container>\r\n          {hora && clima.name && busquedaCiudad == true ?\r\n            <Grid container columnSpacing={5}>\r\n              <Grid item>\r\n                <Card>\r\n                  {\r\n                    <>\r\n                      <CardContent>\r\n                        <Typography sx={{ fontSize: 25 }} color=\"text.primary\">\r\n                          {clima.name}\r\n                          <br />\r\n                          {hora}\r\n                        </Typography>\r\n                        <img style={{ width: 150 }} key={`img_1`} alt={`clima_1`} src={'img/' + clima.weather[0].icon + '.svg'} />\r\n                        <Typography sx={{ fontSize: 30 }} color=\"text.primary\">\r\n                          {Math.round(clima.main.temp)}°C\r\n                          <br />\r\n                          {clima.weather[0].description.charAt(0).toUpperCase() + clima.weather[0].description.slice(1)}\r\n                        </Typography>\r\n                        <br />\r\n                        <Typography sx={{ fontSize: 25 }} color=\"text.secondary\">\r\n                          <ThermostatIcon />\r\n                          <b>Max:</b> {Math.round(clima.main.temp_max)}°C <b>Min:</b> {Math.round(clima.main.temp_min)}°C\r\n                        </Typography>\r\n                        <Typography sx={{ fontSize: 25 }} color=\"text.secondary\">\r\n                          <InvertColorsIcon />\r\n                          Humedad: {clima.main.humidity}%\r\n                        </Typography>\r\n                        <Typography sx={{ fontSize: 25 }} color=\"text.secondary\">\r\n                          <AirIcon />\r\n                          Viento: {Math.round(clima.wind.speed)} Km/h\r\n                        </Typography>\r\n                        <br />\r\n                        <Row>\r\n                          <Col>\r\n                            <Button variant=\"contained\" onClick={menu}>\r\n                              Volver\r\n                            </Button>\r\n                          </Col>\r\n                          <Col>\r\n                            <a href={`/clima?ciudad=${clima.name},${clima.sys.country}`}>\r\n                              <ReplayIcon />\r\n                            </a>\r\n                          </Col>\r\n                        </Row>\r\n                      </CardContent>\r\n                    </>\r\n                  }\r\n                </Card>\r\n              </Grid>\r\n              {/* <Grid item>\r\n              <Card>\r\n                \r\n              </Card>\r\n            </Grid> */}\r\n            </Grid>\r\n            : (ciudad == null && busquedaCiudad == false) ?\r\n              <>\r\n                <Autocomplete\r\n                  id=\"country-select-demo\"\r\n                  onChange={(event, newValue) => {\r\n                    setBusquedaCiudad(true);\r\n                    buscarCiudad(newValue);\r\n                  }}\r\n                  inputValue={inputValue}\r\n                  onInputChange={(event, newInputValue) => {\r\n                    setInputValue(newInputValue);\r\n                  }}\r\n                  sx={{ width: 300 }}\r\n                  options={ciudades}\r\n                  autoHighlight\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderOption={(props, option) => (\r\n                    <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                      <img\r\n                        loading=\"lazy\"\r\n                        width=\"20\"\r\n                        src={`https://flagcdn.com/w20/${option.country.toLowerCase()}.png`}\r\n                        srcSet={`https://flagcdn.com/w40/${option.country.toLowerCase()}.png 2x`}\r\n                        alt=\"\"\r\n                      />\r\n                      {option.name} ({option.country})\r\n                    </Box>\r\n                  )}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label=\"Busca una ciudad\"\r\n                      inputProps={{\r\n                        ...params.inputProps,\r\n                        autoComplete: 'new-password', // disable autocomplete and autofill\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n                <br /><br />\r\n                <Button variant=\"contained\" onClick={click}>\r\n                  Usar mi ubicación\r\n                </Button>\r\n              </>\r\n              :\r\n              <Box sx={{ display: 'flex' }}>\r\n                <CircularProgress />\r\n              </Box>\r\n          }\r\n        </Container>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PruebaComponent;"]},"metadata":{},"sourceType":"module"}