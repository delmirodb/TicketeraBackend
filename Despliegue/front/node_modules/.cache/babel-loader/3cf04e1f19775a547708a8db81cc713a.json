{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Delmiro\\\\Desktop\\\\TicketeraFrontend\\\\src\\\\screens\\\\pruebaComponent.js\";\nimport React, { useState, useEffect } from \"react\";\nimport logo from '../logo.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PruebaComponent() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: hora && clima.name && busquedaCiudad == true ? /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          columnSpacing: 5,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    sx: {\n                      fontSize: 25\n                    },\n                    color: \"text.primary\",\n                    children: [clima.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 19,\n                      columnNumber: 27\n                    }, this), hora]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 17,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    style: {\n                      width: 150\n                    },\n                    alt: `clima_1`,\n                    src: 'img/' + clima.weather[0].icon + '.svg'\n                  }, `img_1`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 22,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    sx: {\n                      fontSize: 30\n                    },\n                    color: \"text.primary\",\n                    children: [Math.round(clima.main.temp), \"\\xB0C\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 25,\n                      columnNumber: 27\n                    }, this), clima.weather[0].description.charAt(0).toUpperCase() + clima.weather[0].description.slice(1)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 23,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 28,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    sx: {\n                      fontSize: 25\n                    },\n                    color: \"text.secondary\",\n                    children: [/*#__PURE__*/_jsxDEV(ThermostatIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 30,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Max:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 31,\n                      columnNumber: 27\n                    }, this), \" \", Math.round(clima.main.temp_max), \"\\xB0C \", /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Min:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 31,\n                      columnNumber: 75\n                    }, this), \" \", Math.round(clima.main.temp_min), \"\\xB0C\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 29,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    sx: {\n                      fontSize: 25\n                    },\n                    color: \"text.secondary\",\n                    children: [/*#__PURE__*/_jsxDEV(InvertColorsIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 34,\n                      columnNumber: 27\n                    }, this), \"Humedad: \", clima.main.humidity, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 33,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    sx: {\n                      fontSize: 25\n                    },\n                    color: \"text.secondary\",\n                    children: [/*#__PURE__*/_jsxDEV(AirIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 38,\n                      columnNumber: 27\n                    }, this), \"Viento: \", Math.round(clima.wind.speed), \" Km/h\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 37,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 41,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"contained\",\n                        onClick: menu,\n                        children: \"Volver\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 44,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 43,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: /*#__PURE__*/_jsxDEV(\"a\", {\n                        href: `/clima?ciudad=${clima.name},${clima.sys.country}`,\n                        children: /*#__PURE__*/_jsxDEV(ReplayIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 50,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 49,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 48,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 42,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 16,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }, this) : ciudad == null && busquedaCiudad == false ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n            id: \"country-select-demo\",\n            onChange: (event, newValue) => {\n              setBusquedaCiudad(true);\n              buscarCiudad(newValue);\n            },\n            inputValue: inputValue,\n            onInputChange: (event, newInputValue) => {\n              setInputValue(newInputValue);\n            },\n            sx: {\n              width: 300\n            },\n            options: ciudades,\n            autoHighlight: true,\n            getOptionLabel: option => option.name,\n            renderOption: (props, option) => /*#__PURE__*/_jsxDEV(Box, {\n              component: \"li\",\n              sx: {\n                '& > img': {\n                  mr: 2,\n                  flexShrink: 0\n                }\n              },\n              ...props,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                loading: \"lazy\",\n                width: \"20\",\n                src: `https://flagcdn.com/w20/${option.country.toLowerCase()}.png`,\n                srcSet: `https://flagcdn.com/w40/${option.country.toLowerCase()}.png 2x`,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 23\n              }, this), option.name, \" (\", option.country, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 21\n            }, this),\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              label: \"Busca una ciudad\",\n              inputProps: { ...params.inputProps,\n                autoComplete: 'new-password' // disable autocomplete and autofill\n\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: click,\n            children: \"Usar mi ubicaci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex'\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = PruebaComponent;\nexport default PruebaComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PruebaComponent\");","map":{"version":3,"sources":["C:/Users/Delmiro/Desktop/TicketeraFrontend/src/screens/pruebaComponent.js"],"names":["React","useState","useEffect","logo","PruebaComponent","hora","clima","name","busquedaCiudad","fontSize","width","weather","icon","Math","round","main","temp","description","charAt","toUpperCase","slice","temp_max","temp_min","humidity","wind","speed","menu","sys","country","ciudad","event","newValue","setBusquedaCiudad","buscarCiudad","inputValue","newInputValue","setInputValue","ciudades","option","props","mr","flexShrink","toLowerCase","params","inputProps","autoComplete","click","display"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport logo from '../logo.svg';\r\n\r\nfunction PruebaComponent() {\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Container>\r\n          {hora && clima.name && busquedaCiudad == true ?\r\n            <Grid container columnSpacing={5}>\r\n              <Grid item>\r\n                <Card>\r\n                  {\r\n                    <>\r\n                      <CardContent>\r\n                        <Typography sx={{ fontSize: 25 }} color=\"text.primary\">\r\n                          {clima.name}\r\n                          <br />\r\n                          {hora}\r\n                        </Typography>\r\n                        <img style={{ width: 150 }} key={`img_1`} alt={`clima_1`} src={'img/' + clima.weather[0].icon + '.svg'} />\r\n                        <Typography sx={{ fontSize: 30 }} color=\"text.primary\">\r\n                          {Math.round(clima.main.temp)}°C\r\n                          <br />\r\n                          {clima.weather[0].description.charAt(0).toUpperCase() + clima.weather[0].description.slice(1)}\r\n                        </Typography>\r\n                        <br />\r\n                        <Typography sx={{ fontSize: 25 }} color=\"text.secondary\">\r\n                          <ThermostatIcon />\r\n                          <b>Max:</b> {Math.round(clima.main.temp_max)}°C <b>Min:</b> {Math.round(clima.main.temp_min)}°C\r\n                        </Typography>\r\n                        <Typography sx={{ fontSize: 25 }} color=\"text.secondary\">\r\n                          <InvertColorsIcon />\r\n                          Humedad: {clima.main.humidity}%\r\n                        </Typography>\r\n                        <Typography sx={{ fontSize: 25 }} color=\"text.secondary\">\r\n                          <AirIcon />\r\n                          Viento: {Math.round(clima.wind.speed)} Km/h\r\n                        </Typography>\r\n                        <br />\r\n                        <Row>\r\n                          <Col>\r\n                            <Button variant=\"contained\" onClick={menu}>\r\n                              Volver\r\n                            </Button>\r\n                          </Col>\r\n                          <Col>\r\n                            <a href={`/clima?ciudad=${clima.name},${clima.sys.country}`}>\r\n                              <ReplayIcon />\r\n                            </a>\r\n                          </Col>\r\n                        </Row>\r\n                      </CardContent>\r\n                    </>\r\n                  }\r\n                </Card>\r\n              </Grid>\r\n              {/* <Grid item>\r\n              <Card>\r\n                \r\n              </Card>\r\n            </Grid> */}\r\n            </Grid>\r\n            : (ciudad == null && busquedaCiudad == false) ?\r\n              <>\r\n                <Autocomplete\r\n                  id=\"country-select-demo\"\r\n                  onChange={(event, newValue) => {\r\n                    setBusquedaCiudad(true);\r\n                    buscarCiudad(newValue);\r\n                  }}\r\n                  inputValue={inputValue}\r\n                  onInputChange={(event, newInputValue) => {\r\n                    setInputValue(newInputValue);\r\n                  }}\r\n                  sx={{ width: 300 }}\r\n                  options={ciudades}\r\n                  autoHighlight\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderOption={(props, option) => (\r\n                    <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                      <img\r\n                        loading=\"lazy\"\r\n                        width=\"20\"\r\n                        src={`https://flagcdn.com/w20/${option.country.toLowerCase()}.png`}\r\n                        srcSet={`https://flagcdn.com/w40/${option.country.toLowerCase()}.png 2x`}\r\n                        alt=\"\"\r\n                      />\r\n                      {option.name} ({option.country})\r\n                    </Box>\r\n                  )}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label=\"Busca una ciudad\"\r\n                      inputProps={{\r\n                        ...params.inputProps,\r\n                        autoComplete: 'new-password', // disable autocomplete and autofill\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n                <br /><br />\r\n                <Button variant=\"contained\" onClick={click}>\r\n                  Usar mi ubicación\r\n                </Button>\r\n              </>\r\n              :\r\n              <Box sx={{ display: 'flex' }}>\r\n                <CircularProgress />\r\n              </Box>\r\n          }\r\n        </Container>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PruebaComponent;"]},"metadata":{},"sourceType":"module"}